import { Container } from 'inversify';
import { PremiosController } from '../controllers/PremiosController.js';
import { AutoresController } from '../controllers/AutoresController.js';
import { AvaliadoresController } from '../controllers/AvaliadoresController.js';
import { ProjetosController } from '../controllers/ProjetosController.js';
import { AvaliacoesController } from '../controllers/AvaliacoesController.js';
import { VencedoresController } from '../controllers/VencedoresController.js';
import { PremiosService } from '../services/PremiosService.js';
import { AutoresService } from '../services/AutoresService.js';
import { AvaliadoresService } from '../services/AvaliadoresService.js';
import { ProjetosService } from '../services/ProjetosService.js';
import { AvaliacoesService } from '../services/AvaliacoesService.js';
import { VencedoresService } from '../services/VencedoresService.js';
import { Premio } from '../models/Premio.js';
import { Cronograma } from '../models/Cronograma.js';
import { Autor } from '../models/Autor.js';
import { Contato } from '../models/Contato.js';
import { Endereco } from '../models/Endereco.js';
import { Avaliador } from '../models/Avaliador.js';
import { Projeto } from '../models/Projeto.js';
import { Avaliacao } from '../models/Avaliacao.js';

const container = new Container();
container.bind(PremiosController).toSelf();
container.bind(AutoresController).toSelf();
container.bind(AvaliadoresController).toSelf();
container.bind(ProjetosController).toSelf();
container.bind(AvaliacoesController).toSelf();
container.bind(VencedoresController).toSelf();
container.bind(PremiosService).toSelf();
container.bind(AutoresService).toSelf();
container.bind(AvaliadoresService).toSelf();
container.bind(ProjetosService).toSelf();
container.bind(AvaliacoesService).toSelf();
container.bind(VencedoresService).toSelf();
container.bind(Premio).toSelf();
container.bind(Cronograma).toSelf();
container.bind(Autor).toSelf();
container.bind(Contato).toSelf();
container.bind(Endereco).toSelf();
container.bind(Avaliador).toSelf();
container.bind(Projeto).toSelf();
container.bind(Avaliacao).toSelf();

export { container };